README
match函数输出为一个字典curriculum_all，可查找：curriculum_all[curriculum_need]和curriculum_all[curriculum_have]
分别储存需要修读的课程和已修读的课程（已分类）

输入即为课程号和学分的字典



储存培养方案：
import pickle
output=open('curriculum.pkl','wb')
curriculum={1:{'credit':47,1:{'credit':13.5,'021E0010':'思想道德修养与法律基础','021E0020':'中国近现代史纲要','021E0040':'马克思主义基本原理概论','031E0031':'毛泽东思想和中国特色社会主义理论体系概论','371E0010':'形势与政策Ⅰ','371E0020':'形势与政策Ⅱ'},2:{'credit':8.5,'03110021':'军训','031E0020':'体育Ⅰ','031E0030':'体育Ⅱ','031E0040':'体育Ⅲ','031E0010':'军事理论','031E0050':'体育Ⅳ','03110080':'体质测试Ⅰ','03110090':'体质测试Ⅱ'},3:{'credit':7,'051F0020':'大学英语Ⅲ','051F0030':'大学英语Ⅳ','051F0600':'英语水平测试'},4:{'credit':5,1:{'credit':5,1:{'credit':3,'211G0200':'Python程序设计','211G0210':'C程序设计','211G0220':'Java程序设计'},2:{'credit':2,'211G0230':'科学计算基础','211G0240':'程序设计基础'}},2:{'credit':5,'211G0250':'程序设计基础','211G0260':'程序设计专题'}},5:{'credit':13}},2:{'credit':26,1:{'credit':23.5,'061B0170':'微积分Ⅰ','211D0130':'设计绘画','061B0180':'微积分Ⅱ','061B0212':'大学物理（乙）Ⅰ','211D0100':'设计基础','061B0190':'微积分Ⅲ','061B0222':'大学物理（乙）Ⅱ'},2:{'credit':2.5,'081C0130':'工程图学','121C0090':'画法几何'}},3:{'credit':80,1:{'credit':47.5,'211B0010':'离散数学及其应用','211C0010':'面向对象程序设计','211C0020':'数据结构基础**','21121350':'数据库系统**','21120350':'造型基础**','21121300':'媒体信号处理基础','21121320':'图像信息处理**','21191320':'数字摄影**','21120510':'计算机图形学**','21120920':'数字媒体资源管理**','21121141':'数字视音频处理**','21121340':'计算机网络**','21191051':'计算机动画**','21191070':'计算机视觉**','21120681':'人机交互技术**','21190912':'计算机游戏程序设计**','21191370':'虚拟现实与数字娱乐**'},2:{'credit':16,'061B0010':'常微分方程','061B9090':'概率论与数理统计','631B0010':'工程材料','061B0090':'偏微分方程','21191360':'动漫绘画','111C0062':'信号与系统（乙）','21120491':'高级数据结构与算法分析**','111C0070':'信号与系统实验','22120032':'软件工程基础','21121230':'智能终端软件开发','21191100':'剧本策划','21121330':'操作系统**','241C0010':'系统科学与工程','21191590':'跨媒体数据可视化','21191581':'网络安全原理与实践**','201A0050':'中国商业文化与创业精神','21120161':'计算机辅助工业设计','21120770':'动画设计','21121270':'计算机图形学研究进展','21191110':'信息检索','21191441':'数据挖掘导论','21190040':'数字媒体设计','21190640':'数值分析','21191030':'基于 GPU 的绘制'},3:{'credit':8.5,1:{'credit':6.5,'081C0251':'工程训练','21120070':'场景设计与表现**','21120210':'角色形象设计**'},2:{'credit':2,'21188180':'数字媒体综合实践','21191340':'数字媒体后期制作'}},4:{'credit':8,'21189030':'毕业设计（论文）**'}},4:{'credit':12}}
pickle.dump(curriculum,output)
output.close()

每个子字典里都有一个key叫'credit'，它记录该类课程所需学分
字典中 课程号：0 or 1，每次匹配前初始化为0，匹配时若已修该课则设置为1

字典curriculum = { 1:{ 通识课程 }, 2:{ 大类课程 }, 3:{ 专业课程 }, 4:{ 个性课程 }   }

四个：
a=curriculum[1]: 通识课程
{'credit':47, 1:{ 思政类 }, 2:{ 军体类 }, 3:{ 外语类 }, 4:{ 计算机类 }, 5:{ 选修类 }}
	a[1]: 思政类
	{'credit':13.5, 课程号:0 or 1}

	a[2]: 军体类
	{'credit':8.5, 课程号:0 or 1}


	a[3]: 外语类
	{'credit':7, 课程号:0 or 1}


	a[4]: 计算机类
	{'credit':5, 1:{ }, 2:{ }}
		1:{'credit':5, 1:{},2:{}}

		2:{'credit':5, 课程号:0 or 1}

	a[5]: 通识选修类
	a5['credit']=13
		判断至少一门 'S'、
		至少6分，至少一门'J'   'H'、'I'、'J'、'L'、'A'（可能为个性）
		其他'K'、'M'


b=curriculum[2]: 大类课程
{'credit':26, 1:{ 必修 }, 2:{ 选修 }
	1:{'credit'=23.5, 课程号:0 or 1}
	2:{'credit'=2.5, 课程号:0 or 1}


c=curriculum[3]: 专业课程
{'credit':80, 1:{ 必修 }, 2:{ 选修 }, 3:{ 实践教学环节 }, 4:{ 毕设 }
	1:{'credit'=47.5, 课程号:0 or 1}
	2:{'credit'=16, 课程号:0 or 1}
	3:{'credit'=8.5, 1:{ 必修 }, 2:{ 选修 }}
	4:{'credit'=8, 课程号:0 or 1}
		溢出的算个性

d=curriculum[4]: 个性课程 
{'credit':12}
